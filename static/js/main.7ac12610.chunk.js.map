{"version":3,"sources":["LoginCtrl.js","App.js","MatchSubscription.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","LoginCtrl","props","classes","useState","host","setHost","port","setPort","userName","setUserName","password","setPassword","Box","Alert","variant","severity","status","isConnect","text","noValidate","autoComplete","TextField","required","id","label","value","onChange","e","target","TextareaAutosize","rowsMin","className","Button","color","onClick","connect","disabled","disConnect","mqttClient","MatchSubscription","topicsMap","get","testCase","topics","setTopics","disabledStart","disabledStop","isStart","my","FormLabel","component","style","placeholder","fullWidth","start","stop","Map","App","setStatus","setIsStart","onFailure","response","errorMessage","onConnectionLost","onConnected","reconnect","URI","subscribe","onMessageArrived","message","console","log","destinationName","Container","maxWidth","parseInt","MQTT","options","timeout","disconnect","topic","split","unsubscribe","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.7ac12610.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function LoginCtrl(props) {\n  const classes = useStyles();\n\n  var [host, setHost] = useState(props.host);\n  var [port, setPort] = useState(props.port);\n  var [userName, setUserName] = useState(props.userName);\n  var [password, setPassword] = useState(props.password);\n\n  return (\n      <Box>\n        <Alert variant=\"filled\" severity={props.status.isConnect ? \"success\" : \"warning\"}>{props.status.text}</Alert>\n        <br />\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField required id=\"host\" label=\"Host\" value={host} onChange={e => setHost(e.target.value)} />\n            <TextField required id=\"port\" label=\"Port\" value={port} onChange={e => setPort(e.target.value)} />\n            <TextField required id=\"userName\" label=\"UserName\" value={userName} onChange={e => setUserName(e.target.value)} />\n            <TextareaAutosize required id=\"password\" label=\"Password\"  rowsMin={3} value={password} onChange={e => setPassword(e.target.value)}/>\n          </div>\n          <div className={classes.button}>\n          <Button variant=\"contained\" color=\"primary\" onClick={()=>props.connect(host,port,userName,password)}\n            disabled={props.status.isConnect}>Connect</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={props.disConnect}\n            disabled={!props.status.isConnect}>Disconnect</Button>\n          </div>\n        </form>\n      </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport Container from '@material-ui/core/Container';\n\nimport * as MQTT from 'paho-mqtt';\nimport LoginCtrl from './LoginCtrl'\nimport MatchSubscription from './MatchSubscription'\n//import MatchTable from './MatchTable'\n//import DeltaTable from './DeltaTable'\n\n// Global variables\nvar mqttClient;\nvar testCase = \"FULL\";\n//var replyToTopic = \"\";\n//const cacheRequestTopic = \"cacheproxy/request\";\n//const utf8decoder = new TextDecoder();\n//const topicsMap = new Map([[\"FULL\", \"t1/match/+/full\"],\nconst topicsMap = new\n  Map([ [\"FULL\",\"T/demo\"],\n        [\"DELTA\", \"t1/match/+/delta\"],\n        [\"SEQUENCE\", \"t1/match/1/delta\"]])\n//var _gCurrentMatchList = []\n//var _gCurrentDeltaList = []\n//var _lastSeq = 0\n\nexport default function App() {\n  const [status, setStatus] = useState({\n    isConnect: false,\n    text: \"No Connection\"\n  });\n  const [isStart, setIsStart] = useState(false);\n  //const [matchList, setMatchList] = useState([]);\n  //const [deltaList, setDeltaList] = useState([]);\n  var subscribedTopic =\"\"\n  var host = \"localhost\"\n  var port = 8000\n  var userName = \"user-111\"\n  var password = \"OAUTH~WSO2~eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI4dU5JQllIVk16c1gtcGNYYmxWT2NOdjU2VzB0RkxDUmNZOE9pSW1mRC1VIn0.eyJleHAiOjE1ODgwNzE3NTksImlhdCI6MTU4ODA2ODE1OSwiYXV0aF90aW1lIjoxNTg4MDY4MTU4LCJqdGkiOiI5ODJlY2UzOC04ZGI4LTRkMmEtYjkwMC00ZTRjMmJhMTk1ZjMiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0Ojg4ODgvYXV0aC9yZWFsbXMvbWFzdGVyIiwiYXVkIjoiaHR0cDovL29yZy53c28yLmFwaW1ndC9nYXRld2F5Iiwic3ViIjoiOTZkMjYxY2UtNmUyYi00OTdmLTllZDUtNDRhMWNhZTJhNjdjIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoib3BlbmlkLWNvbm5lY3QiLCJzZXNzaW9uX3N0YXRlIjoiMzEwZGE4ZmMtYTQ4OS00OGI4LWJjNjEtOTUyMmYzMTE0OWI0IiwiYWNyIjoiMSIsInNjb3BlIjoiZmJfcHVzaCJ9.S3Fjpfi6_V7Na7sOJkazvJod0DzajPy8xA9loKJrcF8NdPnqIVFbYvGALtkx6mu8ZJkTekjAFgAeq3FyrSPBqYnDMFK4uDsRSejpAdyxxfxGWN15Ix0E6olRWh6E-D3_XhxZRl-jk9081toYPkBwbMNytoTwMfg0b8bDHWLlWS9gjbAASfsKrT_sudtbfFUcDlq_XSp_C5KVRuH-yCMxdKw7qwmtsJ9khkDDv1PS7MeQONq4Tp-MIU-yF5slnMaouC-xRKQKgCoOOc9nzRUq3wKNl_t3MFZe49PpfsGVLRcFoEdwMZAO1984NGSS6lU1CsPS69YuaXQEfD1pLKvG1A\"\n\n  function connect(host, port, userName, password) {\n    console.log(\"connect() is called\")\n    if ('string' == typeof port) {\n      port = parseInt(port)\n    }\n    mqttClient = new MQTT.Client(host, port, \"\");\n    mqttClient.onConnectionLost = onConnectionLost;\n    mqttClient.onMessageArrived = onMessageArrived;\n    mqttClient.onConnected = onConnected;\n    var options = {\n      timeout: 3,\n      onFailure: onFailure,\n      userName: userName,\n      password: password,\n    };\n    mqttClient.connect(options);\n  }\n\n  function disConnect() {\n    console.log(\"disConnect() is called\")\n    if (status.isConnect) {\n      mqttClient.disconnect()\n    }\n  }\n\n  function onFailure(response) {\n    setStatus({\n      isConnect: false,\n      text: \"Connection Failure: \" + response.errorMessage\n    });\n  }\n\n  function onConnectionLost(response) {\n    setStatus({\n      isConnect: false,\n      text: \"Connection Lost: \" + response.errorMessage\n    });\n    setIsStart(false)\n  }\n\n  function onConnected(reconnect, URI) {\n    // Subscribe client to the special Solace topic for requesting a unique\n    // Reply-to destination for the MQTT client\n    mqttClient.subscribe(\"$SYS/client/reply-to\");\n    setStatus({\n      isConnect: true,\n      text: \"Connected to \" + URI\n    });\n    setIsStart(false)\n    //_gCurrentMatchList = []\n    //_gCurrentDeltaList = []\n    //setMatchList(_gCurrentMatchList)\n    //setDeltaList(_gCurrentDeltaList)\n  }\n\n  // called when a message arrives\n  function onMessageArrived(message) {\n    console.log(\"we've got message from: \" +  message.destinationName);\n  }\n\n  function start(topic) {\n    console.log(\"start subscribe to : \" + topic.split(\",\"));\n      mqttClient.subscribe(topic.split(\",\"));\n\n    setIsStart(true);\n  }\n\n\n  function stop(topic) {\n    //mqttClient.unsubscribe(topicsMap.get(testCase))\n\n      console.log(\"unscribed: \" + topic.split(\",\"));\n      mqttClient.unsubscribe(topic.split(\",\"));\n\n      setIsStart(false)\n    // clean the Match and Delta list\n    //_gCurrentMatchList = [];\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <LoginCtrl host={host} port={port} userName={userName} password={password}\n        status={status} connect={connect} disConnect={disConnect} />\n      <MatchSubscription testCase={testCase} topicsMap={topicsMap}\n        isStart={isStart} status={status} start={start} stop={stop} />\n{/*\n      {testCase===\"SEQUENCE\"\n      ?<DeltaTable deltaList={deltaList}/>\n      :<MatchTable matchList={matchList} />\n      }\n*/}\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import Radio from '@material-ui/core/Radio';\n//import RadioGroup from '@material-ui/core/RadioGroup';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function MatchSubscription(props) {\n  const classes = useStyles();\n\n  //var [testCase, setTestCase] = useState(props.testCase);\n  var [topics, setTopics] = useState(props.topicsMap.get(props.testCase));\n  var disabledStart = false, disabledStop = true;\n\n\n  if (props.status.isConnect) {\n    disabledStart = props.isStart;\n    disabledStop = !props.isStart;\n  }\n\n/*\n  function onCaseChange(value) {\n    setTestCase(value)\n    setTopics(props.topicsMap.get(value))\n  }\n*/\n  return (\n    <Box my={1}>\n      <form noValidate autoComplete=\"off\">\n      <FormLabel component=\"legend\">Test Cases</FormLabel>\n{/*\n      <RadioGroup row aria-label=\"position\" name=\"position\"\n        value={testCase} onChange={e => onCaseChange(e.target.value)}>\n        <FormControlLabel\n          value=\"FULL\"\n          control={<Radio color=\"primary\" />}\n          label=\"FULL\"\n          disabled={disabledStart}\n        />\n        <FormControlLabel\n          value=\"DELTA\"\n          control={<Radio color=\"primary\" />}\n          label=\"DELTA\"\n          disabled={disabledStart}\n        />\n        <FormControlLabel\n          value=\"SEQUENCE\"\n          control={<Radio color=\"primary\" />}\n          label=\"SEQUENCE\"\n          disabled={disabledStart}\n        />\n      </RadioGroup>\n  */}\n        <div>\n          <TextField\n            id=\"topics\"\n            label=\"Topics\"\n            style={{ margin: 8 }}\n            placeholder=\"Placeholder\"\n            fullWidth\n            margin=\"normal\"\n            value={topics}\n            disabled={disabledStart}\n            onChange={e => setTopics(e.target.value)}\n          />\n        </div>\n        <div className={classes.button}>\n          <Button variant=\"contained\" color=\"primary\"\n            disabled={disabledStart}\n            onClick={()=>props.start(topics)}>Start</Button>\n          <Button variant=\"contained\" color=\"primary\"\n            disabled={disabledStop}\n            onClick={()=>props.stop(topics)}>Stop</Button>\n        </div>\n      </form>\n    </Box>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}